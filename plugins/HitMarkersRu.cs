 /* СКАЧАНО С https://discord.gg/k3hXsVua7Q */ using System; using System.Collections; using System.Collections.Generic; using System.Globalization; using System.Linq; using Newtonsoft.Json; using Newtonsoft.Json.Converters; using Oxide.Core; using Oxide.Core.Libraries.Covalence; using Oxide.Core.Plugins; using Oxide.Game.Rust.Cui; using UnityEngine; using Random = UnityEngine.Random; namespace Oxide.Plugins { [Info("Hit Markers", "anfunny", "2.0")] public class HitMarkersRu : RustPlugin { [PluginReference] private Plugin ImageLibrary, Notify, MenuSystem; private const string Layer = "UI.HitMarkers"; private const string QCYXZTDHTDQPORCPNSDCNXJITYKXPQLXXHTJNNGPRXV = "UI.HitMarkers.Hit"; private const string JLPOPKIFGDVSSQEAJFSCSTSGYTCZMOKQCUYIJWIEHGQUMA = "UI.HitMarkers.HealthLine"; private static HitMarkersRu WJFFMESXQSIPVIJSSSEQXRWRNXNVMCYUYCFPGIYMJXIPAG; private static Configuration WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC; private class Configuration { [JsonProperty(PropertyName = "Разрешение (например: hitmarkersru.use)")] public string Permission = string.Empty; [JsonProperty(PropertyName = "Включить работу с Notify?")] public bool PKVMMUVMPSTEBOHQDSWGYMDZAMKXCDKDRTUJWTOOLDQSYSW = false; [JsonProperty(PropertyName = "Шрифты", ObjectCreationHandling = ObjectCreationHandling.Replace)] public Dictionary<int, FontConf> PVKRDVUDGWMAJXJMIPNITXTJDHUUVKAHPVHHSSAWZRDAH = new Dictionary<int, FontConf> { [0] = new FontConf { Font = "robotocondensed-bold.ttf", Permission = string.Empty }, [1] = new FontConf { Font = "robotocondensed-regular.ttf", Permission = string.Empty }, [2] = new FontConf { Font = "permanentmarker.ttf", Permission = string.Empty }, [3] = new FontConf { Font = "droidsansmono.ttf", Permission = string.Empty } }; [JsonProperty(PropertyName = "Минимальный размер шрифта")] public int FNUEJIFOVSCANVAZHVVEKNQCTPPRJCUTCPCGAQBSCBAOF = 8; [JsonProperty(PropertyName = "Максимальный размер шрифта")] public int EEVZKHECDRXSLTSOESYIXYTTZQUDBJMBXBLLVJSNOZLKJIF = 18; [JsonProperty(PropertyName = "Кнопки", ObjectCreationHandling = ObjectCreationHandling.Replace)] public List<BtnConf> ZOWIQWUGLBATMBAUFVUKIHSVALUXNIJRLNDNNELAGF = new List<BtnConf> { new BtnConf { RJEXZVDXXSTIDQUSTBXNUQJIACJIDOEPEEQDCYRHBHIXT = true, JDYGDMRUUBZVWWLVTIOEEZARPUJQLMHMPZSGKXLR = "Текст", JKOEHCUVGNZIOWKCHRIDBJHTMGXEFKWXXGUOLNISPVEYHEAC = BtnType.Text, DDGCOWACVRBEQPWRCLICVRUIPNFEJLIFUWCHQUJKTMP = "<b>Цифры нанесённого урона</b> появится в центре экрана!", Permission = string.Empty }, new BtnConf { RJEXZVDXXSTIDQUSTBXNUQJIACJIDOEPEEQDCYRHBHIXT = true, JDYGDMRUUBZVWWLVTIOEEZARPUJQLMHMPZSGKXLR = "Иконка", JKOEHCUVGNZIOWKCHRIDBJHTMGXEFKWXXGUOLNISPVEYHEAC = BtnType.Icon, DDGCOWACVRBEQPWRCLICVRUIPNFEJLIFUWCHQUJKTMP = "Привычная всем иконка попадания, меняет цвет при выстреле <b>в голову</b>!", Permission = string.Empty }, new BtnConf { RJEXZVDXXSTIDQUSTBXNUQJIACJIDOEPEEQDCYRHBHIXT = true, JDYGDMRUUBZVWWLVTIOEEZARPUJQLMHMPZSGKXLR = "Полоса", JKOEHCUVGNZIOWKCHRIDBJHTMGXEFKWXXGUOLNISPVEYHEAC = BtnType.HealthLine, DDGCOWACVRBEQPWRCLICVRUIPNFEJLIFUWCHQUJKTMP = "Над слотами появляется полоса, показывающая <b>оставшееся</b> ХП врага.", Permission = string.Empty }, new BtnConf { RJEXZVDXXSTIDQUSTBXNUQJIACJIDOEPEEQDCYRHBHIXT = true, JDYGDMRUUBZVWWLVTIOEEZARPUJQLMHMPZSGKXLR = "Постройки", JKOEHCUVGNZIOWKCHRIDBJHTMGXEFKWXXGUOLNISPVEYHEAC = BtnType.Buildings, DDGCOWACVRBEQPWRCLICVRUIPNFEJLIFUWCHQUJKTMP = "Отображение повреждений по строениям", Permission = string.Empty } }; [JsonProperty(PropertyName = "Показывать урон по НПЦ")] public bool TJYAMZRFONVYSWAHFBWSCRIIZYNHAJUDDGYMCKIY = true; [JsonProperty(PropertyName = "Показывать урон по животным")] public bool DVEPOKQMXGZKMXCAQBOLKFESSUMXOEUTXWZWESKNXUCDUSRI; [JsonProperty(PropertyName = "Время удаления маркера")] public float LMJTNMYQLXTYTXSLFNPYFWXQANPCBYZDDADSLZJKBFTVQPDX = 0.25f; [JsonProperty(PropertyName = "Значения по умолчанию")] public DefaultValues DefaultValues = new DefaultValues { FontSize = 14, Buildings = false, RASGFTBPZXTHBJBVMSDWOJHIDVFPLTRRRWODKHXOFG = 0, HealthLine = false, Icon = false, Text = true }; [JsonProperty(PropertyName = "Настройка линии")] public LineSettings Line = new LineSettings { NFPFYAULDKRICVNQMNSIPFEGDDOCIGWHATSRKXCZQYO = true, Text = false }; } private class LineSettings { [JsonProperty(PropertyName = "Показывать линию?")] public bool NFPFYAULDKRICVNQMNSIPFEGDDOCIGWHATSRKXCZQYO; [JsonProperty(PropertyName = "Показывать текст?")] public bool Text; } private class DefaultValues { [JsonProperty(PropertyName = "ID шрифта")] public int RASGFTBPZXTHBJBVMSDWOJHIDVFPLTRRRWODKHXOFG; [JsonProperty(PropertyName = "Размер шрифта")] public int FontSize; [JsonProperty(PropertyName = "Текст")] public bool Text; [JsonProperty(PropertyName = "Иконка")] public bool Icon; [JsonProperty(PropertyName = "Полоса ХП ")] public bool HealthLine; [JsonProperty(PropertyName = "Урон по строениям")] public bool Buildings; } private class BtnConf { [JsonProperty(PropertyName = "Включено")] public bool RJEXZVDXXSTIDQUSTBXNUQJIACJIDOEPEEQDCYRHBHIXT; [JsonProperty(PropertyName = "Название")] public string JDYGDMRUUBZVWWLVTIOEEZARPUJQLMHMPZSGKXLR; [JsonProperty(PropertyName = "Тип")] [JsonConverter(typeof(StringEnumConverter))] public BtnType JKOEHCUVGNZIOWKCHRIDBJHTMGXEFKWXXGUOLNISPVEYHEAC; [JsonProperty(PropertyName = "Описание")] public string DDGCOWACVRBEQPWRCLICVRUIPNFEJLIFUWCHQUJKTMP; [JsonProperty(PropertyName = "Разрешение (например: hitmarkersru.text)")] public string Permission; } private enum BtnType { Text, Icon, HealthLine, Buildings } private class FontConf { [JsonProperty(PropertyName = "Шрифт")] public string Font; [JsonProperty(PropertyName = "Разрешение (например: hitmarkersru.font)")] public string Permission; } protected override void LoadConfig() { base.LoadConfig(); try { WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC = Config.ReadObject<Configuration>(); if (WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC == null) throw new Exception(); SaveConfig(); } catch (Exception ex) { PrintError("Your configuration file contains an error. Using default configuration values."); LoadDefaultConfig(); Debug.LogException(ex); } } protected override void SaveConfig() { Config.WriteObject(WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC); } protected override void LoadDefaultConfig() { WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC = new Configuration(); } private static PluginData HNZFIGFTSAMLJXNAQWTKIVKTNOBHBXIJCYBBOAWCFPMTKQYS; private void SaveData() { Interface.Oxide.DataFileSystem.WriteObject(Name, HNZFIGFTSAMLJXNAQWTKIVKTNOBHBXIJCYBBOAWCFPMTKQYS); } private void LoadData() { try { HNZFIGFTSAMLJXNAQWTKIVKTNOBHBXIJCYBBOAWCFPMTKQYS = Interface.Oxide.DataFileSystem.ReadObject<PluginData>(Name); } catch (Exception e) { PrintError(e.ToString()); } if (HNZFIGFTSAMLJXNAQWTKIVKTNOBHBXIJCYBBOAWCFPMTKQYS == null) HNZFIGFTSAMLJXNAQWTKIVKTNOBHBXIJCYBBOAWCFPMTKQYS = new PluginData(); } private class PluginData { [JsonProperty(PropertyName = "Players", ObjectCreationHandling = ObjectCreationHandling.Replace)] public Dictionary<ulong, PlayerData> Players = new Dictionary<ulong, PlayerData>(); } private class PlayerData { [JsonProperty(PropertyName = "Font ID")] public int RASGFTBPZXTHBJBVMSDWOJHIDVFPLTRRRWODKHXOFG; [JsonProperty(PropertyName = "Font Size")] public int FontSize; [JsonProperty(PropertyName = "Text")] public bool Text; [JsonProperty(PropertyName = "Icon")] public bool Icon; [JsonProperty(PropertyName = "Health Line")] public bool HealthLine; [JsonProperty(PropertyName = "Buildings")] public bool Buildings; public static PlayerData QDYGZFFQPTWOGMWCYLAYZNVWVJWHKJLPZCHEDHEPOSHDOAOH(BasePlayer player) { return QDYGZFFQPTWOGMWCYLAYZNVWVJWHKJLPZCHEDHEPOSHDOAOH(player.userID); } public static PlayerData QDYGZFFQPTWOGMWCYLAYZNVWVJWHKJLPZCHEDHEPOSHDOAOH(ulong userId) { if (!HNZFIGFTSAMLJXNAQWTKIVKTNOBHBXIJCYBBOAWCFPMTKQYS.Players.ContainsKey(userId)) HNZFIGFTSAMLJXNAQWTKIVKTNOBHBXIJCYBBOAWCFPMTKQYS.Players.Add(userId, new PlayerData { FontSize = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.DefaultValues.FontSize, RASGFTBPZXTHBJBVMSDWOJHIDVFPLTRRRWODKHXOFG = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.DefaultValues.RASGFTBPZXTHBJBVMSDWOJHIDVFPLTRRRWODKHXOFG, Text = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.DefaultValues.Text, Buildings = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.DefaultValues.Buildings, Icon = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.DefaultValues.Icon, HealthLine = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.DefaultValues.HealthLine }); return HNZFIGFTSAMLJXNAQWTKIVKTNOBHBXIJCYBBOAWCFPMTKQYS.Players[userId]; } public bool UOBPTWCIBKPJYFGIHOEFSYRGLJHGRIUVOSQUJZGGEVBXP(BtnType QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB) { switch (QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB) { case BtnType.Text: return Text; case BtnType.Icon: return Icon; case BtnType.HealthLine: return HealthLine; case BtnType.Buildings: return Buildings; default: throw new ArgumentOutOfRangeException(); } } public void QMAVGLKCWVXUEJOWRSQTUGPMYHIXBXXURFTVFVBIKM(BtnType QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB, bool newValue) { switch (QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB) { case BtnType.Text: Text = newValue; break; case BtnType.Icon: Icon = newValue; break; case BtnType.HealthLine: HealthLine = newValue; break; case BtnType.Buildings: Buildings = newValue; break; default: throw new ArgumentOutOfRangeException(); } } } public List<String> JCXGXQBHGNXWWEXCBTBNVTCXZYSIMNZFNCGXTXVSPCQ = new List<String> { "hitmarkers", "hit", "marker" }; private void OnServerInitialized() { WJFFMESXQSIPVIJSSSEQXRWRNXNVMCYUYCFPGIYMJXIPAG = this; LoadData(); RegisterPermissions(); foreach (var cmdName in JCXGXQBHGNXWWEXCBTBNVTCXZYSIMNZFNCGXTXVSPCQ) cmd.AddChatCommand(cmdName, this, nameof(VXOVWRHDIGVLKWOWZDMAZYDDZPTQWRHIIKUOJLMGTTONVTJY)); } private void Unload() { foreach (var player in BasePlayer.activePlayerList) CuiHelper.DestroyUi(player, Layer); HSHUUFWNGDLVJVBSTZBYOWUMZLKGPBVCZWRKVESVBI.Values.ToList().ForEach(marker => { if (marker != null) marker.Kill(); }); SaveData(); WJFFMESXQSIPVIJSSSEQXRWRNXNVMCYUYCFPGIYMJXIPAG = null; HNZFIGFTSAMLJXNAQWTKIVKTNOBHBXIJCYBBOAWCFPMTKQYS = null; WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC = null; } private void OnEntityTakeDamage(BuildingBlock LZNUUTJSWPITTLXPZPDIWDFXETGUFPYHGXFERPJD, HitInfo info) { if (LZNUUTJSWPITTLXPZPDIWDFXETGUFPYHGXFERPJD == null || info == null || info.damageTypes.Total() < 1) return; var player = info.InitiatorPlayer; if (player == null) return; var marker = GetMarker(player); if (marker == null) return; if (PlayerData.QDYGZFFQPTWOGMWCYLAYZNVWVJWHKJLPZCHEDHEPOSHDOAOH(player).Buildings) NextTick(() => { if (LZNUUTJSWPITTLXPZPDIWDFXETGUFPYHGXFERPJD != null && !LZNUUTJSWPITTLXPZPDIWDFXETGUFPYHGXFERPJD.IsDestroyed) marker.ShowHit(LZNUUTJSWPITTLXPZPDIWDFXETGUFPYHGXFERPJD, info); }); } private void OnPlayerAttack(BasePlayer attacker, HitInfo info) { if (attacker == null || attacker.IsNpc || info == null) return; var target = info.HitEntity as BaseCombatEntity; if (target == null || target is BaseCorpse || target is BuildingBlock || !WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.DVEPOKQMXGZKMXCAQBOLKFESSUMXOEUTXWZWESKNXUCDUSRI && target is BaseAnimalNPC || !WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.TJYAMZRFONVYSWAHFBWSCRIIZYNHAJUDDGYMCKIY && (target is BaseNpc || target is BasePlayer && (target as BasePlayer).IsNpc)) return; NextTick(() => { if (target != null && !target.IsDestroyed) GetOrAddMarker(attacker).ShowHit(target, info); }); } private void VXOVWRHDIGVLKWOWZDMAZYDDZPTQWRHIIKUOJLMGTTONVTJY(BasePlayer player, string command, string[] args) { MenuSystem?.Call("MS_CustomCMD", player, "hitmarker", true); } private void OpenHitmarkers(BasePlayer player, string command, string[] args) { if (player == null) return; if (!string.IsNullOrEmpty(WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.Permission) && !permission.UserHasPermission(player.UserIDString, WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.Permission)) { MWNIQKWRMOORDQMECRADRKCXCGKFFNYLYFTNCAOW(player, true, false); return; } MWNIQKWRMOORDQMECRADRKCXCGKFFNYLYFTNCAOW(player, true); } [ConsoleCommand("UI_Markers")] private void ZBFYLWXULWGXRHRZMDZCZMNQGHFKPIFGUZXPBKWOXUYPFI(ConsoleSystem.Arg arg) { var player = arg?.Player(); if (player == null || !arg.HasArgs()) return; switch (arg.Args[0]) { case "settype": { BtnType QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB; if (!arg.HasArgs(2) || !Enum.TryParse(arg.Args[1], out QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB)) return; var BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC = PlayerData.QDYGZFFQPTWOGMWCYLAYZNVWVJWHKJLPZCHEDHEPOSHDOAOH(player); if (BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC == null) return; var QPJDFIJCACYJEBLCZYBVSVDLWILSBCJITLAZNQEIURPJKXKS = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.ZOWIQWUGLBATMBAUFVUKIHSVALUXNIJRLNDNNELAGF.Find(x => x.JKOEHCUVGNZIOWKCHRIDBJHTMGXEFKWXXGUOLNISPVEYHEAC == QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB); if (QPJDFIJCACYJEBLCZYBVSVDLWILSBCJITLAZNQEIURPJKXKS != null) if (!string.IsNullOrEmpty(QPJDFIJCACYJEBLCZYBVSVDLWILSBCJITLAZNQEIURPJKXKS.Permission) && !permission.UserHasPermission(player.UserIDString, QPJDFIJCACYJEBLCZYBVSVDLWILSBCJITLAZNQEIURPJKXKS.Permission)) { SendNotify(player, NoPermission, 1); return; } BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC.QMAVGLKCWVXUEJOWRSQTUGPMYHIXBXXURFTVFVBIKM(QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB, !BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC.UOBPTWCIBKPJYFGIHOEFSYRGLJHGRIUVOSQUJZGGEVBXP(QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB)); MWNIQKWRMOORDQMECRADRKCXCGKFFNYLYFTNCAOW(player); break; } case "setsize": { int VMQCGDVMXGWWRBYTQQSBLOJUSBBGUBYXSTGPSFMIFNPJHMDPQ; if (!arg.HasArgs(2) || !int.TryParse(arg.Args[1], out VMQCGDVMXGWWRBYTQQSBLOJUSBBGUBYXSTGPSFMIFNPJHMDPQ)) return; var BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC = PlayerData.QDYGZFFQPTWOGMWCYLAYZNVWVJWHKJLPZCHEDHEPOSHDOAOH(player); if (BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC == null) return; BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC.FontSize = VMQCGDVMXGWWRBYTQQSBLOJUSBBGUBYXSTGPSFMIFNPJHMDPQ; MWNIQKWRMOORDQMECRADRKCXCGKFFNYLYFTNCAOW(player); break; } case "setfont": { int THSROGDWKEBPRWIZDXUJALDKVXYAMGYLPEHQFBEZMWUIGP; if (!arg.HasArgs(2) || !int.TryParse(arg.Args[1], out THSROGDWKEBPRWIZDXUJALDKVXYAMGYLPEHQFBEZMWUIGP)) return; var BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC = PlayerData.QDYGZFFQPTWOGMWCYLAYZNVWVJWHKJLPZCHEDHEPOSHDOAOH(player); if (BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC == null) return; BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC.RASGFTBPZXTHBJBVMSDWOJHIDVFPLTRRRWODKHXOFG = THSROGDWKEBPRWIZDXUJALDKVXYAMGYLPEHQFBEZMWUIGP; MWNIQKWRMOORDQMECRADRKCXCGKFFNYLYFTNCAOW(player); break; } case "info": { int SAIIFUHPIEIVQHCJEGPZNPSUCTVWEQVDGCFZEXTQIPYMWFNS; if (!arg.HasArgs(2) || !int.TryParse(arg.Args[1], out SAIIFUHPIEIVQHCJEGPZNPSUCTVWEQVDGCFZEXTQIPYMWFNS) || SAIIFUHPIEIVQHCJEGPZNPSUCTVWEQVDGCFZEXTQIPYMWFNS < 0 || WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.ZOWIQWUGLBATMBAUFVUKIHSVALUXNIJRLNDNNELAGF.Count <= SAIIFUHPIEIVQHCJEGPZNPSUCTVWEQVDGCFZEXTQIPYMWFNS) return; LUFWGVLMJYUBKOUVBZABTFWVMWXHNYADEGQHXGYNOOBKTKJ(player, WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.ZOWIQWUGLBATMBAUFVUKIHSVALUXNIJRLNDNNELAGF[SAIIFUHPIEIVQHCJEGPZNPSUCTVWEQVDGCFZEXTQIPYMWFNS].DDGCOWACVRBEQPWRCLICVRUIPNFEJLIFUWCHQUJKTMP); break; } } } private void MWNIQKWRMOORDQMECRADRKCXCGKFFNYLYFTNCAOW(BasePlayer player, bool EVHWTQBRKAZXLBRQGSNKLDWGZRBLSJHJCMTOKOWXILYVMGL = false, bool ZKUWILIBZBXCPPYATPVYHDGRWQBZEAUSFRMIPKBQDSP = true) { var BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC = PlayerData.QDYGZFFQPTWOGMWCYLAYZNVWVJWHKJLPZCHEDHEPOSHDOAOH(player); if (BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC == null) return; float NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ; float HQYEHDRPZQHIJOSZJMCQIGWXUQPTZUYLOOFISUJCFHGMFI; float ETQKQOZJBTAKQOYQERWTUJKGPDAKBZKSLZKZIKIWPFEOSK; float OHQCUJPWVJKVNOOHBJHZRDYHUJZDPFWNFLMCKXQJVDPQYP; float IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA; var RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH = new CuiElementContainer(); if (EVHWTQBRKAZXLBRQGSNKLDWGZRBLSJHJCMTOKOWXILYVMGL) { CuiHelper.DestroyUi(player, Layer); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = {AnchorMin = "0 0", AnchorMax = "1 0.9", OffsetMin = "172 0", OffsetMax = "0 0"}, Image = { Color = "0 0 0 0", }, CursorEnabled = true }, "MS_UI", Layer); } RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "0.5 0.5", AnchorMax = "0.5 0.5", OffsetMin = "-300 -160", OffsetMax = "300 220" }, Image = { Color = "0.50 0.47 0.41 0" } }, Layer, Layer + ".Main"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "0.5 1", AnchorMax = "0.5 1", OffsetMin = "95 -255", OffsetMax = "265 -85" }, Image = { Color = "0.50 0.47 0.40 0" } }, Layer + ".Main", Layer + ".Preview"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiElement { Parent = Layer + ".Preview", Components = { new CuiRawImageComponent { Png = (string) ImageLibrary.Call("GetImage", "PanelButtonsImage"), Color = "1 1 1 1" }, new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "0 0", OffsetMax = "0 5" } } }); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiLabel { RectTransform = { AnchorMin = "0 0", AnchorMax = "1 0", OffsetMin = "0 0", OffsetMax = "0 18" }, Text = { Text = Msg(player, LooksNow), Align = TextAnchor.MiddleCenter, Font = "robotocondensed-regular.ttf", FontSize = 12, Color = "1 1 1 0.4" } }, Layer + ".Preview"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiLabel { RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" }, Text = { Text = Msg(player, PreviewTitle), Align = TextAnchor.MiddleCenter, Font = $"{WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.PVKRDVUDGWMAJXJMIPNITXTJDHUUVKAHPVHHSSAWZRDAH[BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC.RASGFTBPZXTHBJBVMSDWOJHIDVFPLTRRRWODKHXOFG].Font}", FontSize = BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC.FontSize, Color = "1 1 1 0.7" } }, Layer + ".Preview"); NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ = -265f; HQYEHDRPZQHIJOSZJMCQIGWXUQPTZUYLOOFISUJCFHGMFI = -85f; IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA = 10f; ETQKQOZJBTAKQOYQERWTUJKGPDAKBZKSLZKZIKIWPFEOSK = 80f; OHQCUJPWVJKVNOOHBJHZRDYHUJZDPFWNFLMCKXQJVDPQYP = 80f; var VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO = 1; foreach (var fontConf in WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.PVKRDVUDGWMAJXJMIPNITXTJDHUUVKAHPVHHSSAWZRDAH) { var EPMXESBMJIBFMGGDAGVHKZPNTIVSXAGTBIREIUVAT = fontConf.Key == BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC.RASGFTBPZXTHBJBVMSDWOJHIDVFPLTRRRWODKHXOFG; RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "0.5 1", AnchorMax = "0.5 1", OffsetMin = $"{NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ} {HQYEHDRPZQHIJOSZJMCQIGWXUQPTZUYLOOFISUJCFHGMFI - OHQCUJPWVJKVNOOHBJHZRDYHUJZDPFWNFLMCKXQJVDPQYP}", OffsetMax = $"{NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ + ETQKQOZJBTAKQOYQERWTUJKGPDAKBZKSLZKZIKIWPFEOSK} {HQYEHDRPZQHIJOSZJMCQIGWXUQPTZUYLOOFISUJCFHGMFI}" }, Image = { Color = "0.50 0.47 0.40 0" } }, Layer + ".Main", Layer + $".Font.{fontConf.Key}"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiElement { Parent = Layer + $".Font.{fontConf.Key}", Name = "ButtonImage", Components = { new CuiRawImageComponent { Png = (string) ImageLibrary.Call("GetImage", "PanelButtonsImage"), Color = EPMXESBMJIBFMGGDAGVHKZPNTIVSXAGTBIREIUVAT ? "1 1 1 1" : "0.9 0.9 0.9 0.4" }, new CuiOutlineComponent { Color = EPMXESBMJIBFMGGDAGVHKZPNTIVSXAGTBIREIUVAT ? "0.6 0.6 0.6 0.2" : "0 0 0 0", Distance = EPMXESBMJIBFMGGDAGVHKZPNTIVSXAGTBIREIUVAT ? "-1.25 1.25" : "0 0" }, new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "-2.5 -5", OffsetMax = "2.5 5" } } }); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiLabel { RectTransform = { AnchorMin = "0 0.5", AnchorMax = "1 1", OffsetMin = "0 2", OffsetMax = "0 0" }, Text = { Text = Msg(player, TextTitle), Align = TextAnchor.LowerCenter, Font = fontConf.Value.Font, FontSize = 14, Color = EPMXESBMJIBFMGGDAGVHKZPNTIVSXAGTBIREIUVAT ? XFDTTQAGYJJJYEYKYQXEYMYUANNEELCCMXKIUGKN("#FFFFFF") : "0.416 0.384 0.489 1" } }, Layer + $".Font.{fontConf.Key}"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiLabel { RectTransform = { AnchorMin = "0 0", AnchorMax = "1 0.5", OffsetMin = "0", OffsetMax = "0 -2" }, Text = { Text = Msg(player, FontTitle, VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO), Align = TextAnchor.UpperCenter, Font = "robotocondensed-regular.ttf", FontSize = 14, Color = XFDTTQAGYJJJYEYKYQXEYMYUANNEELCCMXKIUGKN("#FFFFFF") } }, Layer + $".Font.{fontConf.Key}"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiButton { RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" }, Text = { Text = "" }, Button = { Color = "0 0 0 0", Command = $"UI_Markers setfont {fontConf.Key}" } }, Layer + $".Font.{fontConf.Key}"); NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ += IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA + ETQKQOZJBTAKQOYQERWTUJKGPDAKBZKSLZKZIKIWPFEOSK; VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO++; } RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "0.5 1", AnchorMax = "0.5 1", OffsetMin = "-265 -255", OffsetMax = "85 -175" }, Image = { Color = "0.50 0.47 0.40 0" } }, Layer + ".Main", Layer + ".FontSize"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiElement { Parent = Layer + ".FontSize", Components = { new CuiRawImageComponent { Png = (string) ImageLibrary.Call("GetImage", "PanelButtonsImage"), Color = "1 1 1 1" }, new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "-1.5 0", OffsetMax = "5 0" } } }); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiLabel { RectTransform = { AnchorMin = "0 0.5", AnchorMax = "1 1", OffsetMin = "15 0", OffsetMax = "0 0" }, Text = { Text = Msg(player, FontIncreaseTitle), Align = TextAnchor.LowerLeft, Font = "robotocondensed-regular.ttf", FontSize = 12, Color = "1 1 1 1" } }, Layer + ".FontSize"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiLabel { RectTransform = { AnchorMin = "0 0.5", AnchorMax = "1 0.5", OffsetMin = "280 -25", OffsetMax = "0 0" }, Text = { Text = Msg(player, FontSizeFormat, BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC.FontSize), Align = TextAnchor.MiddleLeft, Font = "robotocondensed-regular.ttf", FontSize = 14, Color = "1 1 1 1" } }, Layer + ".FontSize"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "0 0.5", AnchorMax = "0 0.5", OffsetMin = "15 -15", OffsetMax = "265 -10" }, Image = { Color = "0.50 0.47 0.41 0.6" } }, Layer + ".FontSize", Layer + ".FontSize.Line"); ETQKQOZJBTAKQOYQERWTUJKGPDAKBZKSLZKZIKIWPFEOSK = 250; var DOSNBYBBUFTHSFAZEVWIPICIDDPBVGKUNJVAVGHX = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.EEVZKHECDRXSLTSOESYIXYTTZQUDBJMBXBLLVJSNOZLKJIF - WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.FNUEJIFOVSCANVAZHVVEKNQCTPPRJCUTCPCGAQBSCBAOF; var VFBZTQLEJQZELLVMKJXJZGOUYUJKZEXOYRUCAIKNDXMQKQ = (float)(BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC.FontSize - WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.FNUEJIFOVSCANVAZHVVEKNQCTPPRJCUTCPCGAQBSCBAOF) / DOSNBYBBUFTHSFAZEVWIPICIDDPBVGKUNJVAVGHX; RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "0 0", AnchorMax = $"{VFBZTQLEJQZELLVMKJXJZGOUYUJKZEXOYRUCAIKNDXMQKQ} 0.95" }, Image = { Color = "0.416 0.384 0.489 1" } }, Layer + ".FontSize.Line", Layer + ".FontSize.Line.Finish"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "1 0.5", AnchorMax = "1 0.5", OffsetMin = "-5 -5", OffsetMax = "5 5" }, Image = { Color = "1 1 1 1" } }, Layer + ".FontSize.Line.Finish"); var size = ETQKQOZJBTAKQOYQERWTUJKGPDAKBZKSLZKZIKIWPFEOSK / DOSNBYBBUFTHSFAZEVWIPICIDDPBVGKUNJVAVGHX; NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ = 0; for (var XZNKXKNRORGBZGAEESLFTRSMCYJGCUXKISLKMTZE = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.FNUEJIFOVSCANVAZHVVEKNQCTPPRJCUTCPCGAQBSCBAOF; XZNKXKNRORGBZGAEESLFTRSMCYJGCUXKISLKMTZE <= WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.EEVZKHECDRXSLTSOESYIXYTTZQUDBJMBXBLLVJSNOZLKJIF; XZNKXKNRORGBZGAEESLFTRSMCYJGCUXKISLKMTZE++) { RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiButton { RectTransform = { AnchorMin = "0 0", AnchorMax = "0 1", OffsetMin = $"{NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ} 0", OffsetMax = $"{NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ + size} 0" }, Text = { Text = "" }, Button = { Color = "0 0 0 0", Command = $"UI_Markers setsize {XZNKXKNRORGBZGAEESLFTRSMCYJGCUXKISLKMTZE}" } }, Layer + ".FontSize.Line"); NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ += size; } ETQKQOZJBTAKQOYQERWTUJKGPDAKBZKSLZKZIKIWPFEOSK = 530; var AFKUGLHCSHXYKJFHBIYAHOUUVSHVQSLTGUSMIRVNCDJM = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.ZOWIQWUGLBATMBAUFVUKIHSVALUXNIJRLNDNNELAGF.FindAll(x => x.RJEXZVDXXSTIDQUSTBXNUQJIACJIDOEPEEQDCYRHBHIXT); IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA = 10f; size = (ETQKQOZJBTAKQOYQERWTUJKGPDAKBZKSLZKZIKIWPFEOSK - (AFKUGLHCSHXYKJFHBIYAHOUUVSHVQSLTGUSMIRVNCDJM.Count - 1) * IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA) / AFKUGLHCSHXYKJFHBIYAHOUUVSHVQSLTGUSMIRVNCDJM.Count; NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ = -265f; for (VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO = 0; VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO < AFKUGLHCSHXYKJFHBIYAHOUUVSHVQSLTGUSMIRVNCDJM.Count; VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO++) { var LYJFDKKAEDLLQYOELMAWERPQTYJNLXDEHVKUYPMHASCQGASTH = AFKUGLHCSHXYKJFHBIYAHOUUVSHVQSLTGUSMIRVNCDJM[VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO]; RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "0.5 1", AnchorMax = "0.5 1", OffsetMin = $"{NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ} -325", OffsetMax = $"{NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ + size} -265" }, Image = { Color = "0.50 0.47 0.40 0.6" } }, Layer + ".Main", Layer + $".Btn.{VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO}"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiElement { Parent = Layer + $".Btn.{VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO}", Components = { new CuiRawImageComponent { Png = (string) ImageLibrary.Call("GetImage", "PanelButtonsImage"), Color = "1 1 1 1" }, new CuiRectTransformComponent { AnchorMin = "0 0", AnchorMax = "1 1", OffsetMin = "-2.5 -5", OffsetMax = "2.5 5" } } }); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiLabel { RectTransform = { AnchorMin = "0 0.5", AnchorMax = "1 1", OffsetMin = "0 0", OffsetMax = "0 0" }, Text = { Text = $"{LYJFDKKAEDLLQYOELMAWERPQTYJNLXDEHVKUYPMHASCQGASTH.JDYGDMRUUBZVWWLVTIOEEZARPUJQLMHMPZSGKXLR}", Align = TextAnchor.LowerCenter, Font = "robotocondensed-regular.ttf", FontSize = 12, Color = "1 1 1 1" } }, Layer + $".Btn.{VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO}"); IKBNSSYKQWXFEKBUQFJZRMYPDTYWZCCCDFJZAKJNMUORBFTUS(ref RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH, Layer + $".Btn.{VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO}", BKFLTAZSISZMLPVDXGDYOYLVHRPXTJRETPMJHOULXMPDC.UOBPTWCIBKPJYFGIHOEFSYRGLJHGRIUVOSQUJZGGEVBXP(LYJFDKKAEDLLQYOELMAWERPQTYJNLXDEHVKUYPMHASCQGASTH.JKOEHCUVGNZIOWKCHRIDBJHTMGXEFKWXXGUOLNISPVEYHEAC), $"UI_Markers settype {LYJFDKKAEDLLQYOELMAWERPQTYJNLXDEHVKUYPMHASCQGASTH.JKOEHCUVGNZIOWKCHRIDBJHTMGXEFKWXXGUOLNISPVEYHEAC}"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiLabel { RectTransform = { AnchorMin = "1 0", AnchorMax = "1 0", OffsetMin = "-40 16", OffsetMax = "0 32" }, Text = { Text = Msg(player, InfoTitle), Align = TextAnchor.MiddleLeft, Font = "robotocondensed-regular.ttf", FontSize = 12, Color = "1 1 1 0.4" } }, Layer + $".Btn.{VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO}"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "1 0", AnchorMax = "1 0", OffsetMin = "-52 18", OffsetMax = "-40 30" }, Image = { Color = "0.9 0.9 0.9 0.75", Sprite = "assets/icons/info.png" } }, Layer + $".Btn.{VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO}"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiButton { RectTransform = { AnchorMin = "1 0", AnchorMax = "1 0", OffsetMin = "-52 18", OffsetMax = "0 30" }, Text = { Text = "" }, Button = { Color = "0 0 0 0", Command = $"UI_Markers info {WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.ZOWIQWUGLBATMBAUFVUKIHSVALUXNIJRLNDNNELAGF.IndexOf(LYJFDKKAEDLLQYOELMAWERPQTYJNLXDEHVKUYPMHASCQGASTH)}" } }, Layer + $".Btn.{VZCBZSGOBYMMHMWBADWRIQMWUVRASUNNXTSOFIFVLPO}"); NQBRQHDIOFLZKKRIFPOBCFGMZRYQFXWFCMQATLPUCRQ += IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA + size; } CuiHelper.DestroyUi(player, Layer + ".Main"); if(!ZKUWILIBZBXCPPYATPVYHDGRWQBZEAUSFRMIPKBQDSP) { RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" }, Image = { Color = "0 0 0 0.25", Material = "assets/content/ui/uibackgroundblur.mat", FadeIn = 0.15f } }, Layer, "NoAccess"); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiLabel { RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" }, Text = { Text = Msg(player, NoPermission), FontSize = 50, Font = "robotocondensed-bold.ttf", Align = TextAnchor.MiddleCenter, Color = "0.929 0.882 0.847 0.8" } }, "NoAccess"); } CuiHelper.AddUi(player, RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH); } private void IKBNSSYKQWXFEKBUQFJZRMYPDTYWZCCCDFJZAKJNMUORBFTUS(ref CuiElementContainer RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH, string PPENKJGUVRBNWJQXNUHFRMJGCYIBXQAJXDINLXXEYATVWMF, bool value, string command) { var QRJQUTISLEBXPGAHEUOTGVZTVMPYJSGQGBHMVQAQMFD = CuiHelper.GetGuid(); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "0 0", AnchorMax = "0 0", OffsetMin = "18 16", OffsetMax = "56 28" }, Image = { Color = "0.50 0.47 0.41 0.6" } }, PPENKJGUVRBNWJQXNUHFRMJGCYIBXQAJXDINLXXEYATVWMF, QRJQUTISLEBXPGAHEUOTGVZTVMPYJSGQGBHMVQAQMFD); if (value) RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "0.5 0", AnchorMax = "1 1" }, Image = { Color = "0.416 0.384 0.489 1" } }, QRJQUTISLEBXPGAHEUOTGVZTVMPYJSGQGBHMVQAQMFD); else RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { RectTransform = { AnchorMin = "0 0", AnchorMax = "0.5 1" }, Image = { Color = XFDTTQAGYJJJYEYKYQXEYMYUANNEELCCMXKIUGKN("#FFFFFF", 40) } }, QRJQUTISLEBXPGAHEUOTGVZTVMPYJSGQGBHMVQAQMFD); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiButton { RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1" }, Text = { Text = "" }, Button = { Color = "0 0 0 0", Command = $"{command}" } }, QRJQUTISLEBXPGAHEUOTGVZTVMPYJSGQGBHMVQAQMFD); } private void LUFWGVLMJYUBKOUVBZABTFWVMWXHNYADEGQHXGYNOOBKTKJ(BasePlayer player, string text) { var RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH = new CuiElementContainer(); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiElement { Parent = Layer, Name = Layer + ".Info", Components = { new CuiRawImageComponent { Png = (string) ImageLibrary.Call("GetImage", "PanelButtonsImage"), Color = "1 1 1 1" }, new CuiRectTransformComponent {                     AnchorMin = "0.5 0", AnchorMax = "0.5 0", OffsetMin = "-200 50", OffsetMax = "200 100" } } }); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiLabel { RectTransform = { AnchorMin = "0 0", AnchorMax = "1 1", }, Text = { Text = $"{text}", Align = TextAnchor.MiddleCenter, Font = "robotocondensed-regular.ttf", FontSize = 14, Color = "1 1 1 0.5" } }, Layer + ".Info"); CuiHelper.DestroyUi(player, Layer + ".Info"); CuiHelper.AddUi(player, RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH); } private void RegisterPermissions() { foreach (var font in WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.PVKRDVUDGWMAJXJMIPNITXTJDHUUVKAHPVHHSSAWZRDAH.Values.Where(check => !string.IsNullOrEmpty(check.Permission) && !permission.PermissionExists(check.Permission))) permission.RegisterPermission(font.Permission, this); WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.ZOWIQWUGLBATMBAUFVUKIHSVALUXNIJRLNDNNELAGF.ForEach(LYJFDKKAEDLLQYOELMAWERPQTYJNLXDEHVKUYPMHASCQGASTH => { if (!string.IsNullOrEmpty(LYJFDKKAEDLLQYOELMAWERPQTYJNLXDEHVKUYPMHASCQGASTH.Permission) && !permission.PermissionExists(LYJFDKKAEDLLQYOELMAWERPQTYJNLXDEHVKUYPMHASCQGASTH.Permission)) permission.RegisterPermission(LYJFDKKAEDLLQYOELMAWERPQTYJNLXDEHVKUYPMHASCQGASTH.Permission, this); }); if (!string.IsNullOrEmpty(WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.Permission) && !permission.PermissionExists(WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.Permission)) permission.RegisterPermission(WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.Permission, this); } private static string XFDTTQAGYJJJYEYKYQXEYMYUANNEELCCMXKIUGKN(string RNTDPBCCGXKMBFWERRPTADMPXCHQSNKPSIJKXWTVBFGNNKDTE, float alpha = 100) { if (string.IsNullOrEmpty(RNTDPBCCGXKMBFWERRPTADMPXCHQSNKPSIJKXWTVBFGNNKDTE)) RNTDPBCCGXKMBFWERRPTADMPXCHQSNKPSIJKXWTVBFGNNKDTE = "#FFFFFF"; var FCCWQZWXFNDURQVIEJISXLRNYNLNUXHARSNSJSIKWJ = RNTDPBCCGXKMBFWERRPTADMPXCHQSNKPSIJKXWTVBFGNNKDTE.Trim('#'); if (FCCWQZWXFNDURQVIEJISXLRNYNLNUXHARSNSJSIKWJ.Length != 6) throw new Exception(RNTDPBCCGXKMBFWERRPTADMPXCHQSNKPSIJKXWTVBFGNNKDTE); var r = byte.Parse(FCCWQZWXFNDURQVIEJISXLRNYNLNUXHARSNSJSIKWJ.Substring(0, 2), NumberStyles.HexNumber); var g = byte.Parse(FCCWQZWXFNDURQVIEJISXLRNYNLNUXHARSNSJSIKWJ.Substring(2, 2), NumberStyles.HexNumber); var b = byte.Parse(FCCWQZWXFNDURQVIEJISXLRNYNLNUXHARSNSJSIKWJ.Substring(4, 2), NumberStyles.HexNumber); return $"{(double)r / 255} {(double)g / 255} {(double)b / 255} {alpha / 100f}"; } private static bool JJNXOPJQQMDNEBKHISGDVCMGHWAUPPRGJYODKXMXDN(ulong player, ulong friend) { return RelationshipManager.ServerInstance.FindPlayersTeam(player)?.members?.Contains(friend) == true; } private static Vector2 ZZOIWZAMODKKHWGPRPPAAUWEFMHXKGJZHONHTOEVPDDCY() { var x = (float)Random.Range(55, 63) / 100; var y = (float)Random.Range(44, 46) / 100; return new Vector2(x, y); } private static string HHDIUIONNECJCJSDBHULDTIZVDKTLWQUFRFATCMAKUAIF(int VMASQLXRIJGCUDRCBUOFZHLGBNHADMFRSBZKXKWNQUUYZQ, int GDGSVSVQOBUQCDWOWEPKTDGERYAPEMMHLCAXXTKYWKLJ) { if (VMASQLXRIJGCUDRCBUOFZHLGBNHADMFRSBZKXKWNQUUYZQ > GDGSVSVQOBUQCDWOWEPKTDGERYAPEMMHLCAXXTKYWKLJ) VMASQLXRIJGCUDRCBUOFZHLGBNHADMFRSBZKXKWNQUUYZQ = GDGSVSVQOBUQCDWOWEPKTDGERYAPEMMHLCAXXTKYWKLJ; var n = GDGSVSVQOBUQCDWOWEPKTDGERYAPEMMHLCAXXTKYWKLJ > 0 ? (float)SYMVEVSLCWLKULPXCNICHGDCZDCYMBYWNZZPMSHSBMED.Length / GDGSVSVQOBUQCDWOWEPKTDGERYAPEMMHLCAXXTKYWKLJ : 0; var SAIIFUHPIEIVQHCJEGPZNPSUCTVWEQVDGCFZEXTQIPYMWFNS = (int)(VMASQLXRIJGCUDRCBUOFZHLGBNHADMFRSBZKXKWNQUUYZQ * n); if (SAIIFUHPIEIVQHCJEGPZNPSUCTVWEQVDGCFZEXTQIPYMWFNS > 0) SAIIFUHPIEIVQHCJEGPZNPSUCTVWEQVDGCFZEXTQIPYMWFNS--; return SYMVEVSLCWLKULPXCNICHGDCZDCYMBYWNZZPMSHSBMED[SAIIFUHPIEIVQHCJEGPZNPSUCTVWEQVDGCFZEXTQIPYMWFNS]; } private static readonly string[] SYMVEVSLCWLKULPXCNICHGDCZDCYMBYWNZZPMSHSBMED = { "0.2000 0.8000 0.2000 1.0000", "0.2471 0.7922 0.1961 1.0000", "0.2824 0.7843 0.1922 1.0000", "0.3176 0.7725 0.1843 1.0000", "0.3451 0.7647 0.1804 1.0000", "0.3686 0.7569 0.1765 1.0000", "0.3922 0.7490 0.1725 1.0000", "0.4118 0.7412 0.1686 1.0000", "0.4314 0.7333 0.1647 1.0000", "0.4471 0.7216 0.1608 1.0000", "0.4667 0.7137 0.1569 1.0000", "0.4784 0.7059 0.1529 1.0000", "0.4941 0.6980 0.1490 1.0000", "0.5098 0.6902 0.1412 1.0000", "0.5216 0.6824 0.1373 1.0000", "0.5333 0.6706 0.1333 1.0000", "0.5451 0.6627 0.1294 1.0000", "0.5569 0.6549 0.1255 1.0000", "0.5647 0.6471 0.1216 1.0000", "0.5765 0.6392 0.1176 1.0000", "0.5843 0.6314 0.1137 1.0000", "0.5922 0.6235 0.1137 1.0000", "0.6039 0.6118 0.1098 1.0000", "0.6118 0.6039 0.1059 1.0000", "0.6196 0.5961 0.1020 1.0000", "0.6275 0.5882 0.0980 1.0000", "0.6314 0.5804 0.0941 1.0000", "0.6392 0.5725 0.0902 1.0000", "0.6471 0.5647 0.0863 1.0000", "0.6510 0.5569 0.0824 1.0000", "0.6588 0.5451 0.0784 1.0000", "0.6627 0.5373 0.0784 1.0000", "0.6667 0.5294 0.0745 1.0000", "0.6745 0.5216 0.0706 1.0000", "0.6784 0.5137 0.0667 1.0000", "0.6824 0.5059 0.0627 1.0000", "0.6863 0.4980 0.0588 1.0000", "0.6902 0.4902 0.0588 1.0000", "0.6941 0.4824 0.0549 1.0000", "0.6980 0.4745 0.0510 1.0000", "0.7020 0.4667 0.0471 1.0000", "0.7020 0.4588 0.0471 1.0000", "0.7059 0.4471 0.0431 1.0000", "0.7098 0.4392 0.0392 1.0000", "0.7098 0.4314 0.0392 1.0000", "0.7137 0.4235 0.0353 1.0000", "0.7176 0.4157 0.0314 1.0000", "0.7176 0.4078 0.0314 1.0000", "0.7216 0.4000 0.0275 1.0000", "0.7216 0.3922 0.0275 1.0000", "0.7216 0.3843 0.0235 1.0000", "0.7255 0.3765 0.0235 1.0000", "0.7255 0.3686 0.0196 1.0000", "0.7255 0.3608 0.0196 1.0000", "0.7255 0.3529 0.0196 1.0000", "0.7294 0.3451 0.0157 1.0000", "0.7294 0.3373 0.0157 1.0000", "0.7294 0.3294 0.0157 1.0000", "0.7294 0.3216 0.0118 1.0000", "0.7294 0.3137 0.0118 1.0000", "0.7294 0.3059 0.0118 1.0000", "0.7294 0.2980 0.0118 1.0000", "0.7294 0.2902 0.0078 1.0000", "0.7255 0.2824 0.0078 1.0000", "0.7255 0.2745 0.0078 1.0000", "0.7255 0.2667 0.0078 1.0000", "0.7255 0.2588 0.0078 1.0000", "0.7255 0.2510 0.0078 1.0000", "0.7216 0.2431 0.0078 1.0000", "0.7216 0.2353 0.0039 1.0000", "0.7176 0.2275 0.0039 1.0000", "0.7176 0.2196 0.0039 1.0000", "0.7176 0.2118 0.0039 1.0000", "0.7137 0.2039 0.0039 1.0000", "0.7137 0.1961 0.0039 1.0000", "0.7098 0.1882 0.0039 1.0000", "0.7098 0.1804 0.0039 1.0000", "0.7059 0.1725 0.0039 1.0000", "0.7020 0.1647 0.0039 1.0000", "0.7020 0.1569 0.0039 1.0000", "0.6980 0.1490 0.0039 1.0000", "0.6941 0.1412 0.0039 1.0000", "0.6941 0.1333 0.0039 1.0000", "0.6902 0.1255 0.0039 1.0000", "0.6863 0.1176 0.0039 1.0000", "0.6824 0.1098 0.0039 1.0000", "0.6784 0.1020 0.0039 1.0000", "0.6784 0.0941 0.0039 1.0000", "0.6745 0.0863 0.0039 1.0000", "0.6706 0.0784 0.0039 1.0000", "0.6667 0.0706 0.0039 1.0000", "0.6627 0.0627 0.0039 1.0000", "0.6588 0.0549 0.0039 1.0000", "0.6549 0.0431 0.0039 1.0000", "0.6510 0.0353 0.0000 1.0000", "0.6471 0.0275 0.0000 1.0000", "0.6392 0.0196 0.0000 1.0000", "0.6353 0.0118 0.0000 1.0000", "0.6314 0.0039 0.0000 1.0000", "0.6275 0.0000 0.0000 1.0000" }; private readonly Dictionary<BasePlayer, MarkerComponent> HSHUUFWNGDLVJVBSTZBYOWUMZLKGPBVCZWRKVESVBI = new Dictionary<BasePlayer, MarkerComponent>(); private MarkerComponent GetMarker(BasePlayer player) { MarkerComponent marker; return HSHUUFWNGDLVJVBSTZBYOWUMZLKGPBVCZWRKVESVBI.TryGetValue(player, out marker) && marker != null ? marker : null; } private MarkerComponent GetOrAddMarker(BasePlayer player) { MarkerComponent marker; if (HSHUUFWNGDLVJVBSTZBYOWUMZLKGPBVCZWRKVESVBI.TryGetValue(player, out marker) && marker != null) return marker; return player.gameObject.AddComponent<MarkerComponent>(); } private class MarkerComponent : FacepunchBehaviour { private BasePlayer VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS; private PlayerData YUDFNAKJZLKBNEZQTPCTGXIMWYWPBIPINAKAJYCXEXG; private void Awake() { VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS = GetComponent<BasePlayer>(); YUDFNAKJZLKBNEZQTPCTGXIMWYWPBIPINAKAJYCXEXG = PlayerData.QDYGZFFQPTWOGMWCYLAYZNVWVJWHKJLPZCHEDHEPOSHDOAOH(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS); WJFFMESXQSIPVIJSSSEQXRWRNXNVMCYUYCFPGIYMJXIPAG.HSHUUFWNGDLVJVBSTZBYOWUMZLKGPBVCZWRKVESVBI[VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS] = this; } public void ShowHit(BaseCombatEntity target, HitInfo info) { if (YUDFNAKJZLKBNEZQTPCTGXIMWYWPBIPINAKAJYCXEXG.HealthLine) ShowLine(BtnType.HealthLine, target, info); if (YUDFNAKJZLKBNEZQTPCTGXIMWYWPBIPINAKAJYCXEXG.Text) ShowLine(BtnType.Text, target, info); if (YUDFNAKJZLKBNEZQTPCTGXIMWYWPBIPINAKAJYCXEXG.Icon) ShowLine(BtnType.Icon, target, info); } private void ShowLine(BtnType QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB, BaseCombatEntity target, HitInfo info) { var RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH = new CuiElementContainer(); switch (QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB) { case BtnType.Text: { var VNLTGRTKMYBBLQIPDUIRVBOMUYGUMFPIQYRJMDJJOFVO = ZZOIWZAMODKKHWGPRPPAAUWEFMHXKGJZHONHTOEVPDDCY(); var IPTPNTJPOOTZZYHKZXHJSKNYZCALYCQFAMMJNFZLFTCJYKMEB = info.damageTypes.Total().ToString("F0"); if (Mathf.FloorToInt(info.damageTypes.Total()) == 0) return; var targetPlayer = target as BasePlayer; if (targetPlayer != null) { if (info.isHeadshot) IPTPNTJPOOTZZYHKZXHJSKNYZCALYCQFAMMJNFZLFTCJYKMEB = WJFFMESXQSIPVIJSSSEQXRWRNXNVMCYUYCFPGIYMJXIPAG.Msg(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS, FormatHeadshotTitle, IPTPNTJPOOTZZYHKZXHJSKNYZCALYCQFAMMJNFZLFTCJYKMEB); if (targetPlayer.IsWounded()) { IPTPNTJPOOTZZYHKZXHJSKNYZCALYCQFAMMJNFZLFTCJYKMEB = WJFFMESXQSIPVIJSSSEQXRWRNXNVMCYUYCFPGIYMJXIPAG.Msg(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS, FormatFellTitle); if (info.isHeadshot) IPTPNTJPOOTZZYHKZXHJSKNYZCALYCQFAMMJNFZLFTCJYKMEB += WJFFMESXQSIPVIJSSSEQXRWRNXNVMCYUYCFPGIYMJXIPAG.Msg(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS, FormatFellHeadshotTitle); } if (JJNXOPJQQMDNEBKHISGDVCMGHWAUPPRGJYODKXMXDN(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS.userID, targetPlayer.userID)) IPTPNTJPOOTZZYHKZXHJSKNYZCALYCQFAMMJNFZLFTCJYKMEB = WJFFMESXQSIPVIJSSSEQXRWRNXNVMCYUYCFPGIYMJXIPAG.Msg(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS, FormatFriendTitle); } var PHOEGXBUQKTYRLYNYMMYXUYVEZIEAPQVKZNJRVGOHTOOSHBQL = CuiHelper.GetGuid(); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiElement { Name = PHOEGXBUQKTYRLYNYMMYXUYVEZIEAPQVKZNJRVGOHTOOSHBQL, Parent = "Hud", FadeOut = 0.5f, Components = { new CuiTextComponent { Text = $"{IPTPNTJPOOTZZYHKZXHJSKNYZCALYCQFAMMJNFZLFTCJYKMEB}", Color = "1 1 1 1", Font = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.PVKRDVUDGWMAJXJMIPNITXTJDHUUVKAHPVHHSSAWZRDAH[YUDFNAKJZLKBNEZQTPCTGXIMWYWPBIPINAKAJYCXEXG.RASGFTBPZXTHBJBVMSDWOJHIDVFPLTRRRWODKHXOFG].Font, FontSize = YUDFNAKJZLKBNEZQTPCTGXIMWYWPBIPINAKAJYCXEXG.FontSize, Align = TextAnchor.MiddleCenter }, new CuiOutlineComponent { Color = "0 0 0 1", Distance = "0.1 0.1" }, new CuiRectTransformComponent { AnchorMin = $"{VNLTGRTKMYBBLQIPDUIRVBOMUYGUMFPIQYRJMDJJOFVO.x} {VNLTGRTKMYBBLQIPDUIRVBOMUYGUMFPIQYRJMDJJOFVO.y}", AnchorMax = $"{VNLTGRTKMYBBLQIPDUIRVBOMUYGUMFPIQYRJMDJJOFVO.x} {VNLTGRTKMYBBLQIPDUIRVBOMUYGUMFPIQYRJMDJJOFVO.y}", OffsetMin = " 40 -25", OffsetMax = "40 25" } } }); CuiHelper.AddUi(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS, RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH); StartCoroutine(MUCLCWINLNYEMRXUCQNIEKESKYUTAJSATMQQQZUULSG(PHOEGXBUQKTYRLYNYMMYXUYVEZIEAPQVKZNJRVGOHTOOSHBQL)); break; } case BtnType.Icon: { var PHOEGXBUQKTYRLYNYMMYXUYVEZIEAPQVKZNJRVGOHTOOSHBQL = CuiHelper.GetGuid(); var color = "1 1 1 0.5"; var image = "assets/icons/close.png"; float IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA = 10; var targetPlayer = target as BasePlayer; if (targetPlayer) { if (targetPlayer.IsWounded()) { IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA = 20; image = "assets/icons/fall.png"; } if (targetPlayer.IsWounded() || targetPlayer.IsDead()) color = "1 0.207745 0.20771 0.5"; } if (info.isHeadshot) color = "1 0.2 0.2 0.5"; RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiButton { FadeOut = 0.3f, RectTransform = { AnchorMin = "0.5 0.5", AnchorMax = "0.5 0.5", OffsetMin = $"-{IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA} -{IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA}", OffsetMax = $"{IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA} {IAYCELKAKJJIKJLHPNXPCBMWDSYDONIJFORDQCRCUKBTBPFA}" }, Button = { Color = color, Sprite = image }, Text = { Text = "" } }, "Hud", PHOEGXBUQKTYRLYNYMMYXUYVEZIEAPQVKZNJRVGOHTOOSHBQL); CuiHelper.AddUi(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS, RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH); CuiHelper.DestroyUi(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS, PHOEGXBUQKTYRLYNYMMYXUYVEZIEAPQVKZNJRVGOHTOOSHBQL); break; } case BtnType.HealthLine: { var curHealth = target.health; var maxHealth = target._maxHealth; var LZNUUTJSWPITTLXPZPDIWDFXETGUFPYHGXFERPJD = target as BuildingBlock; if (LZNUUTJSWPITTLXPZPDIWDFXETGUFPYHGXFERPJD != null) { var AXZVWKWZCAHRRDIUPPAMOMGRANVFTYKGAUWFFCIIKVDPQ = LZNUUTJSWPITTLXPZPDIWDFXETGUFPYHGXFERPJD.currentGrade; if (AXZVWKWZCAHRRDIUPPAMOMGRANVFTYKGAUWFFCIIKVDPQ == null) return; maxHealth = AXZVWKWZCAHRRDIUPPAMOMGRANVFTYKGAUWFFCIIKVDPQ.maxHealth; } var color = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.Line.NFPFYAULDKRICVNQMNSIPFEGDDOCIGWHATSRKXCZQYO ? HHDIUIONNECJCJSDBHULDTIZVDKTLWQUFRFATCMAKUAIF((int)curHealth, (int)maxHealth) : "0 0 0 0"; var OTXKBZIRZNQIVIPQFEPBRXHCONGRBTJRAJZBHJWKYIUIPX = (180.5f + 199.5f) / 2f * (curHealth / maxHealth); RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiPanel { FadeOut = 0.5f, RectTransform = { AnchorMin = "0.5 0", AnchorMax = "0.5 0", OffsetMin = $"{-10 - OTXKBZIRZNQIVIPQFEPBRXHCONGRBTJRAJZBHJWKYIUIPX} 80", OffsetMax = $"{-9 + OTXKBZIRZNQIVIPQFEPBRXHCONGRBTJRAJZBHJWKYIUIPX} 85" }, Image = { Color = color } }, "Hud", JLPOPKIFGDVSSQEAJFSCSTSGYTCZMOKQCUYIJWIEHGQUMA); if (WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.Line.Text) RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH.Add(new CuiElement { Parent = JLPOPKIFGDVSSQEAJFSCSTSGYTCZMOKQCUYIJWIEHGQUMA, FadeOut = 0.5f, Components = { new CuiTextComponent { Text = $"{(maxHealth - curHealth):F0}", Color = "1 1 1 1", Font = WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.PVKRDVUDGWMAJXJMIPNITXTJDHUUVKAHPVHHSSAWZRDAH[YUDFNAKJZLKBNEZQTPCTGXIMWYWPBIPINAKAJYCXEXG.RASGFTBPZXTHBJBVMSDWOJHIDVFPLTRRRWODKHXOFG].Font, FontSize = YUDFNAKJZLKBNEZQTPCTGXIMWYWPBIPINAKAJYCXEXG.FontSize, Align = TextAnchor.LowerCenter }, new CuiOutlineComponent { Color = "0 0 0 1", Distance = "0.15500772 0.1550507712" }, new CuiRectTransformComponent { AnchorMin = "0 1", AnchorMax = "1 1", OffsetMin = "0 0", OffsetMax = "0 30" } } }); BOPVDPRJUXFBQKBDBONCVYLAAGDCWTWMEMQVIYQKRIFWGO(); CuiHelper.AddUi(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS, RTHTNYCWLMBWECARJJXYHEXYCPLIOFVPNXZCJILGYXH); Invoke(BOPVDPRJUXFBQKBDBONCVYLAAGDCWTWMEMQVIYQKRIFWGO, WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.LMJTNMYQLXTYTXSLFNPYFWXQANPCBYZDDADSLZJKBFTVQPDX); break; } } } public void MUCLCWINLNYEMRXUCQNIEKESKYUTAJSATMQQQZUULSG() { CancelInvoke(MUCLCWINLNYEMRXUCQNIEKESKYUTAJSATMQQQZUULSG); CuiHelper.DestroyUi(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS, QCYXZTDHTDQPORCPNSDCNXJITYKXPQLXXHTJNNGPRXV); } public void BOPVDPRJUXFBQKBDBONCVYLAAGDCWTWMEMQVIYQKRIFWGO() { CancelInvoke(BOPVDPRJUXFBQKBDBONCVYLAAGDCWTWMEMQVIYQKRIFWGO); CuiHelper.DestroyUi(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS, JLPOPKIFGDVSSQEAJFSCSTSGYTCZMOKQCUYIJWIEHGQUMA); } public IEnumerator MUCLCWINLNYEMRXUCQNIEKESKYUTAJSATMQQQZUULSG(string TTJTGXUKGRDWBBXRGMBONEZCZRDTQNJRWBXERVXPR, float FLXAVRMGPXKVQOTGUPUATSILAZESALOLWQZOFYVLHKXLGBLI = 0.5f) { yield return CoroutineEx.waitForSeconds(FLXAVRMGPXKVQOTGUPUATSILAZESALOLWQZOFYVLHKXLGBLI); CuiHelper.DestroyUi(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS, TTJTGXUKGRDWBBXRGMBONEZCZRDTQNJRWBXERVXPR); } private void OnDestroy() { WJFFMESXQSIPVIJSSSEQXRWRNXNVMCYUYCFPGIYMJXIPAG?.HSHUUFWNGDLVJVBSTZBYOWUMZLKGPBVCZWRKVESVBI.Remove(VNUDXGAINDFSLXVUJVQYFIJVNEQXOGGWFOYYFHNAPS); } public void Kill() { Destroy(this); } } private const string InfoTitle = "InfoTitle", FontSizeFormat = "FontSizeFormat", FontIncreaseTitle = "FontIncreaseTitle", FontTitle = "FontTitle", TextTitle = "TextTitle", PreviewTitle = "PreviewTitle", LooksNow = "LooksNow", FormatFriendTitle = "FormatFriendTitle", FormatFellHeadshotTitle = "FormatFellHeadshotTitle", FormatFellTitle = "FormatFellTitle", FormatHeadshotTitle = "FormatHeadshotTitle", NoPermission = "NoPermission"; protected override void LoadDefaultMessages() { lang.RegisterMessages(new Dictionary<string, string> { [NoPermission] = "No permissions!", [FormatHeadshotTitle] = "<color=#DC143C>{0}</color>", [FormatFellTitle] = "<color=#DC143C>FELL</color>", [FormatFellHeadshotTitle] = " <color=#DC143C>HEADSHOT</color>", [FormatFriendTitle] = "<color=#32915a>FRIEND</color>", [LooksNow] = "What it looks like now", [PreviewTitle] = "-90", [TextTitle] = "TEXT", [FontTitle] = "Font #{0}", [FontIncreaseTitle] = "Increase the font size", [FontSizeFormat] = "{0}px", [InfoTitle] = "Info" }, this); lang.RegisterMessages(new Dictionary<string, string> { [NoPermission] = "Недостаточно прав!", [FormatHeadshotTitle] = "<color=#DC143C>{0}</color>", [FormatFellTitle] = "<color=#DC143C>УПАЛ</color>", [FormatFellHeadshotTitle] = " <color=#DC143C>ГОЛОВА</color>", [FormatFriendTitle] = "<color=#32915a>ДРУГ</color>", [LooksNow] = "Как это выглядит сейчас", [PreviewTitle] = "-90", [TextTitle] = "TEKCT", [FontTitle] = "Шрифт #{0}", [FontIncreaseTitle] = "Увелечение размера шрифта", [FontSizeFormat] = "{0}px", [InfoTitle] = "Инфо" }, this, "ru"); } private string Msg(string LAIVQDMDLAVNUGDJZYAPFAVUITJVWEYOVIPLGQGMNLTY, string userid = null, params object[] YNETCHDLTFKEONWUQGGBGSLQSDIRNBTGWUKGFBUXVDBCFGRCJ) { return string.Format(lang.GetMessage(LAIVQDMDLAVNUGDJZYAPFAVUITJVWEYOVIPLGQGMNLTY, this, userid), YNETCHDLTFKEONWUQGGBGSLQSDIRNBTGWUKGFBUXVDBCFGRCJ); } private string Msg(BasePlayer player, string LAIVQDMDLAVNUGDJZYAPFAVUITJVWEYOVIPLGQGMNLTY, params object[] YNETCHDLTFKEONWUQGGBGSLQSDIRNBTGWUKGFBUXVDBCFGRCJ) { return string.Format(lang.GetMessage(LAIVQDMDLAVNUGDJZYAPFAVUITJVWEYOVIPLGQGMNLTY, this, player.UserIDString), YNETCHDLTFKEONWUQGGBGSLQSDIRNBTGWUKGFBUXVDBCFGRCJ); } private void Reply(BasePlayer player, string LAIVQDMDLAVNUGDJZYAPFAVUITJVWEYOVIPLGQGMNLTY, params object[] YNETCHDLTFKEONWUQGGBGSLQSDIRNBTGWUKGFBUXVDBCFGRCJ) { SendReply(player, Msg(player, LAIVQDMDLAVNUGDJZYAPFAVUITJVWEYOVIPLGQGMNLTY, YNETCHDLTFKEONWUQGGBGSLQSDIRNBTGWUKGFBUXVDBCFGRCJ)); } private void SendNotify(BasePlayer player, string LAIVQDMDLAVNUGDJZYAPFAVUITJVWEYOVIPLGQGMNLTY, int QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB, params object[] YNETCHDLTFKEONWUQGGBGSLQSDIRNBTGWUKGFBUXVDBCFGRCJ) { if (Notify && WYNYBIKSFNOSOQXKOUORTDTLKUSGAJGQGLRWYDXLOJZC.PKVMMUVMPSTEBOHQDSWGYMDZAMKXCDKDRTUJWTOOLDQSYSW) Notify?.Call("SendNotify", player, QCPQXTPWTWIXOSVCAMFRUFNUMANLXFXWBHBFEHCONB, Msg(player, LAIVQDMDLAVNUGDJZYAPFAVUITJVWEYOVIPLGQGMNLTY, YNETCHDLTFKEONWUQGGBGSLQSDIRNBTGWUKGFBUXVDBCFGRCJ)); else Reply(player, LAIVQDMDLAVNUGDJZYAPFAVUITJVWEYOVIPLGQGMNLTY, YNETCHDLTFKEONWUQGGBGSLQSDIRNBTGWUKGFBUXVDBCFGRCJ); } } }